// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios12.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name BlueStackLevelPlayMediationAdapter
@_exported import BlueStackLevelPlayMediationAdapter
import BlueStackSDK
import Foundation
import IronSource
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc(ISImproveCustomRewardedVideo) public class ISImproveCustomRewardedVideo : IronSource.ISBaseRewardedVideo {
  @objc override dynamic public func isAdAvailable(with adData: IronSource.ISAdData!) -> Swift.Bool
  @objc override dynamic public func loadAd(with adData: IronSource.ISAdData, delegate: any IronSource.ISRewardedVideoAdDelegate)
  @objc override dynamic public func showAd(with viewController: UIKit.UIViewController, adData: IronSource.ISAdData, delegate: any IronSource.ISRewardedVideoAdDelegate)
  @objc override dynamic public init(_ providerConfig: IronSource.ISAdapterConfig)
  @objc override dynamic public init(adUnit: IronSource.ISAdUnit, adapterConfig: IronSource.ISAdapterConfig)
  @objc override dynamic public init(adUnit: IronSource.ISAdUnit, adapterConfig: IronSource.ISAdapterConfig, adUnitObjectId: Foundation.UUID?)
  @objc override dynamic public init()
  @objc deinit
}
extension BlueStackLevelPlayMediationAdapter.ISImproveCustomRewardedVideo : BlueStackSDK.RewardedAdDelegate {
  @objc dynamic public func onAdLoaded(_ ad: BlueStackSDK.RewardedAd)
  @objc dynamic public func onAdFailedToLoad(_ ad: BlueStackSDK.RewardedAd, _ error: any Swift.Error)
  @objc dynamic public func onRewardEarned(_ ad: BlueStackSDK.RewardedAd, _ reward: BlueStackSDK.Reward?)
}
extension BlueStackLevelPlayMediationAdapter.ISImproveCustomRewardedVideo : BlueStackSDK.FullScreenDelegate {
  @objc dynamic public func onAdDisplayed(_ ad: any BlueStackSDK.FullScreenDisplayableAd)
  @objc dynamic public func onAdFailedToDisplay(_ ad: any BlueStackSDK.FullScreenDisplayableAd, _ error: any Swift.Error)
  @objc dynamic public func onAdClicked(_ ad: any BlueStackSDK.FullScreenDisplayableAd)
  @objc dynamic public func onAdDismissed(_ ad: any BlueStackSDK.FullScreenDisplayableAd)
}
@_inheritsConvenienceInitializers @objc(ISImproveCustomBanner) public class ISImproveCustomBanner : IronSource.ISBaseBanner {
  @objc override dynamic public func loadAd(with adData: IronSource.ISAdData, viewController: UIKit.UIViewController, size: IronSource.ISBannerSize, delegate: any IronSource.ISBannerAdDelegate)
  @objc override dynamic public func destroyAd(with adData: IronSource.ISAdData)
  @objc override dynamic public init(_ providerConfig: IronSource.ISAdapterConfig)
  @objc override dynamic public init(adUnit: IronSource.ISAdUnit, adapterConfig: IronSource.ISAdapterConfig)
  @objc override dynamic public init(adUnit: IronSource.ISAdUnit, adapterConfig: IronSource.ISAdapterConfig, adUnitObjectId: Foundation.UUID?)
  @objc override dynamic public init()
  @objc deinit
}
extension BlueStackLevelPlayMediationAdapter.ISImproveCustomBanner : BlueStackSDK.BannerViewDelegate {
  @objc dynamic public func onLoad(_ bannerView: BlueStackSDK.BannerView, _ preferredHeight: CoreFoundation.CGFloat)
  @objc dynamic public func onFailedToLoad(_ bannerView: BlueStackSDK.BannerView, _ error: any Swift.Error)
  @objc dynamic public func onRefresh(_ bannerView: BlueStackSDK.BannerView)
  @objc dynamic public func onFailedToRefresh(_ bannerView: BlueStackSDK.BannerView, _ error: any Swift.Error)
  @objc dynamic public func onClick(_ bannerView: BlueStackSDK.BannerView)
}
@_inheritsConvenienceInitializers @objc(ISImproveCustomAdapter) public class ISImproveCustomAdapter : IronSource.ISBaseNetworkAdapter {
  @objc override dynamic public func networkSDKVersion() -> Swift.String
  @objc override dynamic public func adapterVersion() -> Swift.String
  @objc override dynamic public func `init`(_ adData: IronSource.ISAdData, delegate: any IronSource.ISNetworkInitializationDelegate)
  @objc override dynamic public init()
  @objc deinit
}
public struct BSLevelPlayAudienceTargetingKey {
  public static let Latitude: Swift.String
  public static let Longitude: Swift.String
  public static let ConsentFlag: Swift.String
}
@_inheritsConvenienceInitializers @objc(ISImproveCustomInterstitial) public class ISImproveCustomInterstitial : IronSource.ISBaseInterstitial {
  @objc override dynamic public func loadAd(with adData: IronSource.ISAdData, delegate: any IronSource.ISInterstitialAdDelegate)
  @objc override dynamic public func isAdAvailable(with adData: IronSource.ISAdData!) -> Swift.Bool
  @objc override dynamic public func showAd(with viewController: UIKit.UIViewController, adData: IronSource.ISAdData, delegate: any IronSource.ISInterstitialAdDelegate)
  @objc override dynamic public init(_ providerConfig: IronSource.ISAdapterConfig)
  @objc override dynamic public init(adUnit: IronSource.ISAdUnit, adapterConfig: IronSource.ISAdapterConfig)
  @objc override dynamic public init(adUnit: IronSource.ISAdUnit, adapterConfig: IronSource.ISAdapterConfig, adUnitObjectId: Foundation.UUID?)
  @objc override dynamic public init()
  @objc deinit
}
extension BlueStackLevelPlayMediationAdapter.ISImproveCustomInterstitial : BlueStackSDK.InterstitialAdDelegate {
  @objc dynamic public func onAdLoaded(_ ad: BlueStackSDK.InterstitialAd)
  @objc dynamic public func onAdFailedToLoad(_ ad: BlueStackSDK.InterstitialAd, _ error: any Swift.Error)
}
extension BlueStackLevelPlayMediationAdapter.ISImproveCustomInterstitial : BlueStackSDK.FullScreenDelegate {
  @objc dynamic public func onAdDisplayed(_ ad: any BlueStackSDK.FullScreenDisplayableAd)
  @objc dynamic public func onAdFailedToDisplay(_ ad: any BlueStackSDK.FullScreenDisplayableAd, _ error: any Swift.Error)
  @objc dynamic public func onAdClicked(_ ad: any BlueStackSDK.FullScreenDisplayableAd)
  @objc dynamic public func onAdDismissed(_ ad: any BlueStackSDK.FullScreenDisplayableAd)
}
